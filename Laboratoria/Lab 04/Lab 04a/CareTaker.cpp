//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Laboratorium 04a
//  @ File Name : CareTaker.cpp
//  @ Date : 29.05.2023
//  @ Author : Tomasz Wnuk
//
//

#include <iostream>
#include <string>
#include "CareTaker.h"
#include "Cat.h"

using namespace std;

string CareTaker::getName() {
    return name;
}

void CareTaker::setName(string name) {
    this->name = name;
}

float CareTaker::getHeight() {
    return height;
}

void CareTaker::setHeight(float height) {
    this->height = height;
}

int CareTaker::getAge() {
    return age;
}

void CareTaker::setAge(int age) {
    this->age = age;
}

string CareTaker::getHobby() {
    return hobby;
}

void CareTaker::setHobby(string hobby) {
    this->hobby = hobby;
}

bool CareTaker::getCanTakeCareOfCat() {
    return canTakeCareOfCat;
}

void CareTaker::setCanTakeCareOfCat(bool canTakeCareOfCat) {
    this->canTakeCareOfCat = canTakeCareOfCat;
}

CareTaker::CareTaker(string name, float height, int age, string hobby, bool canTakeCareOfCat) {
    setName(name);
    setHeight(height);
    setAge(age);
    setHobby(hobby);
    setCanTakeCareOfCat(canTakeCareOfCat);
}

CareTaker::~CareTaker() {}

void CareTaker::takeCareOfYourHobby() {
    cout << name << " takes care of his/her hobby!" << endl;
}

void CareTaker::goShopping() {
    cout << name << " goes shopping!" << endl;
}

void CareTaker::attachCat(Cat * cat) {
    cats.push_back(cat);
    cout << "Cat " << cat->getName() << " attached to CareTaker!" << endl;
}

void CareTaker::detachCat(Cat * cat) {
    for (int i = 0; i < cats.size(); i++) {
        if (cats[i] == cat) {
            cats.erase(cats.begin() + i);
            break;
        }
    }
    cout << "Cat " << cat->getName() << " detached from " << name << "!" << endl;
}
