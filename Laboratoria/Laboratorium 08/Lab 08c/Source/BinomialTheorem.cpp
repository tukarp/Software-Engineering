//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Laboratorium 08c
//  @ File Name : BinomialTheorem.cpp
//  @ Date : 31.05.2023
//  @ Author : Tomasz Wnuk
//
//

#include "BinomialTheorem.h"

BinomialTheorem::BinomialTheorem() {
    factorialPtr = new Factorial();
}

BinomialTheorem::~BinomialTheorem() {
    delete factorialPtr;
}

long double BinomialTheorem::binomialTheoremRecursively(int n, int k) {
    N = n - k;
    long NbyK = 1;

    if (k >= N) {
        for (int i = k + 1; i <= n; i++) NbyK *= i;
        return (NbyK / factorialPtr->factorialRecursively(n - k));
    } else {
        for (int i = N + 1; i <= n; i++) NbyK *= i;
        return (NbyK / factorialPtr->factorialRecursively(k));
    }
}

long double BinomialTheorem::binomialTheoremIteratively(int n, int k) {
    N = n - k;
    long NbyK = 1;
    long long factorialNK = 1;
    long long factorialK = 1;

    if (k >= N) {
        for (int i = k + 1; i <= n; i++) NbyK *= i;
        for (int i = 1; i <= n - k; i++) factorialNK *= i;
        return (NbyK / factorialNK);
    } else {
        for (int i = N + 1; i <= n; i++) NbyK *= i;
        for (int i = 1; i <= k; i++) factorialK *= i;
        return (NbyK / factorialK);
    }
}
