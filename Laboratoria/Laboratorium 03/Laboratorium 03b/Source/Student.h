//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Laboratorium 03b
//  @ File Name : Student.h
//  @ Date : 24.05.2023
//  @ Author : Tomasz Wnuk
//
//

#if !defined(_STUDENT_H)
#define _STUDENT_H

#include <string>

using namespace std;

/**
 * Class representing a student
 */
class Student {
public:

	/**
	 * Gets the first name of the student
	 *
	 * @return The first name of the student
	 */
	string getFirstName();

	/**
	 * Sets the first name of the student
	 *
	 * @param firstName The first name of the student
	 */
	void setFirstName(string firstName);

	/**
	 * Gets the last name of the student
	 *
	 * @return The last name of the student
	 */
	string getLastName();

	/**
	 * Sets the last name of the student
	 *
	 * @param lastName The last name of the student
	 */
	void setLastName(string lastName);

	/**
	 * Gets the age of the student
	 *
	 * @return The age of the student
	 */
	int getAge();

	/**
	 * Sets the age of the student
	 *
	 * @param age The age of the student
	 */
	void setAge(int age);

	/**
	 * Gets the average of the student
	 *
	 * @return The average of the student
	 */
	float getAverage();

	/**
	 * Sets the average of the student
	 *
	 * @param average The average of the student
	 */
	void setAverage(float average);

	/**
	 * Gets the year of university of the student
	 *
	 * @return The year of university of the student
	 */
	int getYearOfUniversity();

	/**
	 * Sets the year of university of the student
	 *
	 * @param yearOfUniversity The year of university of the student
	 */
	void setYearOfUniversity(int yearOfUniversity);

	/**
	 * Constructor
	 *
	 * @param firstName The first name of the student
	 * @param lastName The last name of the student
	 * @param age The age of the student
	 * @param average The average of the student
	 * @param yearOfUniversity The year of university of the student
	 */
	Student(string firstName, string lastName, int age, float average, int yearOfUniversity);

	/**
	 * Destructor
	 */
	~Student();

	/**
	 * Student does the homework
	 */
	void doHomework();

	/**
	 * Student attends the lecture
	 */
	void attendLecture();

	/**
	 * Student attends the laboratory
	 */
	void attendLaboratory();

private:

	/**
	 * The first name of the student
	 */
	string firstName;

	/**
	 * The last name of the student
	 */
	string lastName;

	/**
	 * The age of the student
	 */
	int age;

	/**
	 * The average of the student
	 */
	float average;

	/**
	 * The year of university of the student
	 */
	int yearOfUniversity;
};

#endif  //_STUDENT_H
